group 'org.amg'
version '1.0.2'
apply plugin: 'java'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.8'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

task(runMain, dependsOn: 'classes', type: JavaExec) {
    main = 'org.amg.iracingplanner.view.MainView'
    classpath = sourceSets.main.runtimeClasspath
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'org.amg.iracingplanner.view.MainView'
    }
    archiveBaseName = "${rootProject.name}"
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar {
    manifest {
        attributes 'Main-Class': 'org.amg.iracingplanner.view.MainView'
    }
}

tasks.register('copySeries', Copy) {
    from layout.buildDirectory.dir("\\..\\src\\main\\resources\\series")
    include "*.json"
    into layout.buildDirectory.dir("\\libs\\series\\")
}

tasks.register('copyLauncher', Copy) {
    from layout.buildDirectory.dir("\\..\\launcher")
    include "*.bat"
    into layout.buildDirectory.dir("\\libs\\")
}

tasks.register('copyReadme', Copy) {
    from layout.buildDirectory.dir("\\..")
    include "*.md"
    into layout.buildDirectory.dir("\\libs\\")
}

task(deploy, dependsOn: ['assemble', 'fatJar', 'copySeries', 'copyLauncher', 'copyReadme']){
    mkdir layout.buildDirectory.dir("\\libs\\owned\\")
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
}

task createRelease(type: Zip, dependsOn: ['deploy']) {
    mkdir layout.buildDirectory.dir("\\dist\\")
    archiveName "iRacingPlanner-${version}.zip"
    destinationDirectory = project.file("${project.buildDir}\\dist")
    from layout.buildDirectory.dir("\\libs\\")
}
